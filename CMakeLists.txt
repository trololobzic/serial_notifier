cmake_minimum_required(VERSION 3.13)
include(${CMAKE_CURRENT_SOURCE_DIR}/macro.cmake)

# put autogenerated projects "ALL_BUILD" and "ZERO_CHECK"
# to directory "CMakePredefinedTargets" in this solution
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

project(serial_notifier)
option(SKIP_TESTS "Skip execution tests. Use -DSKIP_TESTS=<value> on configuration step" OFF)
set(CMAKE_MFC_FLAG 1)
#set warning level
force_set_flags(CMAKE_CXX_FLAGS "/W[0-4]" "/W4")
force_set_flags(CMAKE_CXX_FLAGS_DEBUG "/W[0-4]" "/W3")
force_set_flags(CMAKE_C_FLAGS "/W[0-4]" "/W4")
force_set_flags(CMAKE_C_FLAGS_DEBUG "/W[0-4]" "/W3")

#set optimization level
force_set_flags(CMAKE_CXX_FLAGS_RELEASE "/O[0-4,x]" "/Ox")
force_set_flags(CMAKE_C_FLAGS_RELEASE "/O[0-4,x]" "/Ox")

find_package(MFC)
if (NOT MFC_FOUND)
  message(FATAL_ERROR "MFC Could not be found during the MFC test")
endif()

file(GLOB_RECURSE SRCS "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp")
file(GLOB_RECURSE HEARDERS "${CMAKE_CURRENT_SOURCE_DIR}/src/*.h")
file(GLOB_RECURSE RESOURSES "${CMAKE_CURRENT_SOURCE_DIR}/src/*.rc" "src/*.rc2")
list(APPEND include_path "${CMAKE_CURRENT_SOURCE_DIR}/src"
                         "${CMAKE_CURRENT_SOURCE_DIR}/src/lang"
                         "${CMAKE_CURRENT_SOURCE_DIR}/src/registry")

if("${CMAKE_MFC_FLAG}" STREQUAL "1")
  msvc_link_to_static_crt()
else()
  # VS generators add this automatically based on the CMAKE_MFC_FLAG value,
  # but generators matching "Make" require:
  add_definitions(-D_AFXDLL)
endif()

create_directories_structure(src "Source")
add_executable(${PROJECT_NAME} WIN32 ${SRCS} ${HEARDERS} ${RESOURSES})
set_include_path("${PROJECT_NAME}" "${include_path}")

if("${CMAKE_MFC_FLAG}" STREQUAL "2")
  set(CMAKE_INSTALL_MFC_LIBRARIES ON)
  include(InstallRequiredSystemLibraries)
endif()

add_definitions(-DUNICODE)
add_definitions(-D_UNICODE)


#Tests project in the same solution
set(TESTS_PROJECT_NAME "${PROJECT_NAME}_tests")
file(GLOB_RECURSE TESTS_SRC "${CMAKE_CURRENT_SOURCE_DIR}/tests/*.cpp"
                            "${CMAKE_CURRENT_SOURCE_DIR}/tests/*.h"
                            "${CMAKE_CURRENT_SOURCE_DIR}/tests/*.hpp"
                            "${CMAKE_CURRENT_SOURCE_DIR}/src/lang/lang.cpp")
create_directories_structure(tests "Tests")
add_executable(${TESTS_PROJECT_NAME} EXCLUDE_FROM_ALL ${TESTS_SRC})
set_include_path("${TESTS_PROJECT_NAME}" "${include_path}")
add_dependencies(${PROJECT_NAME} ${TESTS_PROJECT_NAME})


if ("${SKIP_TESTS}" STREQUAL "OFF")
  add_custom_command(TARGET ${TESTS_PROJECT_NAME} POST_BUILD 
                     COMMAND "${CMAKE_CURRENT_BINARY_DIR}/$<IF:$<CONFIG:Release>,Release,Debug>/${TESTS_PROJECT_NAME}"
                     COMMENT "Starting tests")
endif()
